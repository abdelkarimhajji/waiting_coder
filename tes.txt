import { useState, useEffect } from 'react';

function App() {
  const [isLogin, setIsLogin] = useState(false);

  useEffect(() => {
    fetch('/check-auth')
      .then(res => res.json())
      .then(data => setIsLogin(data.isAuthenticated));
  }, []);

  return (
    <BrowserRouter>
      <UserContext.Provider value={{ isLogin, setIsLogin }}>
        <Routes>
          <Route exact path="/" element={<SignIn />} />
          <Route path="/Home" element={isLogin ? <Home /> : <Navigate to="/" />} />
          {/* ...other routes... */}
        </Routes>
      </UserContext.Provider>
    </BrowserRouter>
  );
}









const express = require('express');
const jwt = require('jsonwebtoken');
const cookieParser = require('cookie-parser');

const app = express();
app.use(cookieParser());

app.get('/check-auth', (req, res) => {
  const token = req.cookies.token;

  if (!token) {
    return res.json({ isAuthenticated: false });
  }

  try {
    jwt.verify(token, SECRET_KEY);
    return res.json({ isAuthenticated: true });
  } catch (err) {
    return res.json({ isAuthenticated: false });
  }
});

app.listen(3000, () => console.log('Server started'));